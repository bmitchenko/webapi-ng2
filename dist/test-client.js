// 
// This file is autogenerated. 
// See http://github.com/bmitchenko/webapi-ng2 for details. 
//
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var http_1 = require('@angular/http');
var ApiClient = (function () {
    function ApiClient(http) {
        this._connection = new ApiConnection(http, '');
    }
    Object.defineProperty(ApiClient.prototype, "basePath", {
        get: function () {
            return this._connection.basePath;
        },
        set: function (basePath) {
            this._connection.basePath = basePath;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApiClient.prototype, "demo", {
        get: function () {
            if (this._demo == undefined) {
                this._demo = new DemoController(this._connection);
            }
            return this._demo;
        },
        enumerable: true,
        configurable: true
    });
    ApiClient = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof http_1.Http !== 'undefined' && http_1.Http) === 'function' && _a) || Object])
    ], ApiClient);
    return ApiClient;
    var _a;
}());
exports.ApiClient = ApiClient;
var ApiConnection = (function () {
    function ApiConnection(http, basePath) {
        this.http = http;
        this.basePath = basePath;
    }
    ApiConnection.prototype.request = function (pattern, method, routeParams, body) {
        var _this = this;
        var url = pattern;
        var search = new http_1.URLSearchParams();
        if (routeParams != undefined) {
            Object.getOwnPropertyNames(routeParams).forEach(function (paramName) {
                if (url.indexOf("{" + paramName + "}") != -1) {
                    url = url.replace("{" + paramName + "}", routeParams[paramName]);
                }
                else {
                    _this.addSearchParam(search, paramName, routeParams[paramName]);
                }
            });
        }
        var request = this.http.request(this.basePath + url, {
            body: body,
            method: method,
            responseType: http_1.ResponseContentType.Json,
            search: search
        });
        return request.map(function (x) { return x.json(); }).toPromise();
    };
    ApiConnection.prototype.addSearchParam = function (search, name, value) {
        var _this = this;
        if (value instanceof Array) {
            value.forEach(function (v, i) {
                _this.addSearchParam(search, name + "[" + i + "]", v);
            });
        }
        else {
            if (value instanceof Date) {
                search.append(name, value.toUTCString());
            }
            else {
                if (value instanceof Object) {
                    Object.getOwnPropertyNames(value).forEach(function (propertyName) {
                        _this.addSearchParam(search, name + "." + propertyName, value[propertyName]);
                    });
                }
                else {
                    search.append(name, value);
                }
            }
        }
    };
    return ApiConnection;
}());
exports.ApiConnection = ApiConnection;
var DemoController = (function () {
    function DemoController(_connection) {
        this._connection = _connection;
    }
    DemoController.prototype.getPrimitive = function () {
        return this._connection.request('api/demo', 'GET', undefined, undefined);
    };
    DemoController.prototype.getPrimitives = function () {
        return this._connection.request('api/demo', 'GET', undefined, undefined);
    };
    DemoController.prototype.getClassBase = function () {
        return this._connection.request('api/demo', 'GET', undefined, undefined);
    };
    DemoController.prototype.getClassDescendant = function () {
        return this._connection.request('api/demo', 'GET', undefined, undefined);
    };
    DemoController.prototype.getGenericDescendant = function () {
        return this._connection.request('api/demo', 'GET', undefined, undefined);
    };
    DemoController.prototype.getGeneric = function () {
        return this._connection.request('api/demo', 'GET', undefined, undefined);
    };
    DemoController.prototype.getParams = function (param1, param2, param3) {
        if (param3 === void 0) { param3 = 'Default'; }
        return this._connection.request('api/demo', 'GET', { param1: param1, param2: param2, param3: param3 }, undefined);
    };
    DemoController.prototype.getQuery = function (query) {
        return this._connection.request('api/demo', 'GET', { query: query }, undefined);
    };
    DemoController.prototype.postQuery = function (query) {
        return this._connection.request('api/demo', 'POST', undefined, query);
    };
    return DemoController;
}());
exports.DemoController = DemoController;
(function (Enumerable) {
    Enumerable[Enumerable["Value1"] = 1] = "Value1";
    Enumerable[Enumerable["Value2"] = 2] = "Value2";
    Enumerable[Enumerable["Value3"] = 3] = "Value3";
    Enumerable[Enumerable["Value4"] = 4] = "Value4";
    Enumerable[Enumerable["Value5"] = 5] = "Value5";
})(exports.Enumerable || (exports.Enumerable = {}));
var Enumerable = exports.Enumerable;
//# sourceMappingURL=test-client.js.map